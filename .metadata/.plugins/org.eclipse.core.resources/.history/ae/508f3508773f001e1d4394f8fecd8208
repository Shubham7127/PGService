package com.app.service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.transaction.Transactional;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.app.custom_exceptions.ResourceNotFoundException;
import com.app.dao.PropertDao;
import com.app.dao.ReviewDao;
import com.app.dao.UserDao;
import com.app.dto.ApiResponse;
import com.app.dto.Converterdto;
import com.app.dto.Propertydto;
import com.app.dto.Reviewdto;
import com.app.pojos.Properties;
import com.app.pojos.Reviews;
import com.app.pojos.User;

@Service
@Transactional
public class ReviewsServImpl implements ReviewsServ {
	@Autowired
	public ReviewDao reviewDao;

	@Autowired
	public ModelMapper mapper;
	
	@Autowired
	private UserDao userDao;
	
	@Autowired
	private PropertDao properDao;

	@Override
	public List<Reviewdto> getAllReview() {

		List<Reviewdto> ReviewsDtoList = new ArrayList<Reviewdto>();
		List<Reviews> reviews = reviewDao.findAll();
		ReviewsDtoList = Arrays.asList(mapper.map(reviews, Reviewdto[].class));
		return ReviewsDtoList;
	}

	@Override
	public ApiResponse addReview(Reviewdto review) {

//		Converterdto converter = new Converterdto();
//		Reviews rev = converter.toReviewsentity(review);
//		Reviews prop = reviewDao.save(rev);
		
		Properties property = properDao.findById(review.getPropertyid()).orElseThrow(()->new RuntimeException("Property Not found"));
		User user = userDao.findById(review.getUserid()).orElseThrow(()->new RuntimeException("user Not found"));
		
		Reviews rev = new Re;

		return new ApiResponse("Review Added Successfully");
	}

	@Override
	public String deleteReview(Long id) {

		Reviews rev= reviewDao.findById(id).orElseThrow(() -> new ResourceNotFoundException("Invalid User ID !!!!!"));
		
		return null;
	}

}
